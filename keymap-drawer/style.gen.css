svg path {
  fill: inherit;
}

/* font and background color specifications */
svg.keymap {
  font-family: "Quicksand", SFMono-Regular, Consolas, Liberation Mono, Menlo, monospace;
  font-size: 16px;
  font-weight: 500;
  font-kerning: normal;
  text-rendering: optimizeLegibility;
  fill: #292524;
}

/* default key styling */
rect.key {
  fill: #fafaf9;
  stroke: #d6d3d1;
  stroke-width: 1;
}

/* default key side styling, only used is draw_key_sides is set */
rect.side {
  filter: brightness(90%);
}

/* color accent for combo boxes */
rect.combo,
rect.combo-separate {
  fill: #cdf;
}

/* color accent for held keys */
rect.held,
rect.combo.held {
  fill: #fdd;
}

/* color accent for ghost (optional) keys */
rect.ghost,
rect.combo.ghost {
  stroke-dasharray: 4, 4;
  stroke-width: 2;
}

text {
  text-anchor: middle;
  dominant-baseline: middle;
}

/* styling for layer labels */
text.label {
  font-weight: bold;
  text-anchor: start;
  stroke: white;
  stroke-width: 2;
  paint-order: stroke;
}

/* styling for combo tap, and key hold/shifted label text */
text.combo,
text.hold,
text.shifted {
  font-size: 11px;
}

text.hold {
  text-anchor: middle;
  dominant-baseline: auto;
}

text.shifted {
  text-anchor: middle;
  dominant-baseline: hanging;
}

/* styling for hold/shifted label text in combo box */
text.combo.hold,
text.combo.shifted {
  font-size: 8px;
}

/* styling for combo dendrons */
path.combo {
  stroke-width: 1;
  stroke: #78716c;
  fill: none;
}

g.trans {
  opacity: 0.7;
}
g.trans text,
g.trans .glyph {
  opacity: 0.1;
}

/* Start Tabler Icons Cleanup */
/* cannot use height/width with glyphs */
.icon-tabler > path {
  fill: inherit;
  stroke: inherit;
  stroke-width: 2;
}

/* hide tabler's default box */
.icon-tabler > path[stroke=none][fill=none] {
  visibility: hidden;
}

/* End Tabler Icons Cleanup */
.rsym rect {
  stroke: #86198f;
}
.rsym .glyph,
.rsym text {
  fill: #86198f;
}

.rlayer rect {
  stroke: #65a30d;
  fill: #f7fee7;
}
.rlayer .glyph,
.rlayer text {
  fill: #65a30d;
}
.rlayer .glyph, .rlayer-held .glyph {
  transform: scale(1.5);
}
.rlayer-held rect {
  stroke: #65a30d;
  fill: #65a30d;
}
.rlayer-held .glyph, .rlayer-held text {
  fill: white;
}

.rmod rect {
  stroke: #be123c;
}
.rmod .glyph,
.rmod text {
  fill: #be123c;
}

.rdead rect {
  stroke: #d97706;
}
.rdead .glyph,
.rdead text {
  fill: #d97706;
}

rect.held,
rect.combo.held {
  stroke: #65a30d;
  fill: #65a30d;
}

rect.combo,
rect.combo-separate {
  fill: #e5e5e5;
  opacity: 0.7;
}

.key.shifted,
.key.hold {
  opacity: 0.6;
}

text.label {
  transform: translate(0, 20px);
  transform: translate(0, 20);
}

text.key.shifted {
  transform: translate(0, 2px);
  transform: translate(0, 2);
}

.keypos-38 rect, .keypos-39 rect {
  stroke: #65a30d;
  fill: #f7fee7;
}
.keypos-38 text, .keypos-38 .glyph, .keypos-39 text, .keypos-39 .glyph {
  fill: #65a30d;
}
.keypos-38 rect.held, .keypos-39 rect.held {
  stroke: #65a30d;
  fill: #65a30d;
}

.key.tap.glyph.tabler__volume, .key.tap.glyph.tabler__volume-2, .key.tap.glyph.tabler__volume-3, .key.tap.glyph.tabler__player-track-next, .key.tap.glyph.tabler__player-track-prev, .key.tap.glyph.tabler__player-play, .key.tap.glyph.tabler__sun-high, .key.tap.glyph.tabler__sun-low, .key.tap.glyph.tabler__player-eject, .key.tap.glyph.tabler__lock {
  transform: scale(1.2);
}

.icon-tabler-volume > path, .icon-tabler-volume-2 > path, .icon-tabler-volume-3 > path, .icon-tabler-player-track-next > path, .icon-tabler-player-track-prev > path, .icon-tabler-player-play > path, .icon-tabler-sun-high > path, .icon-tabler-sun-low > path, .icon-tabler-player-eject > path, .icon-tabler-lock > path {
  stroke-width: 1.5;
}

.layer-base g.key.keypos-32 text.key.tap, .layer-base g.key.keypos-33 text.key.tap {
  font-size: 26px;
  font-weight: 400;
}

.layer-code g.key.keypos-0 text.key.tap, .layer-code g.key.keypos-28 text.key.tap, .layer-code g.key.keypos-30 text.key.tap {
  font-size: 26px;
  font-weight: 400;
}

.layer-navi g.key.keypos-1 text.key.tap, .layer-navi g.key.keypos-13 text.key.tap, .layer-navi g.key.keypos-17 text.key.tap, .layer-navi g.key.keypos-29 text.key.tap {
  font-size: 26px;
  font-weight: 400;
}

.layer-code g.key.keypos-0 text.key.tap, .layer-code g.key.keypos-28 text.key.tap {
  transform: translate(0, 5px);
  transform: translate(0, 5);
}

.layer-navi g.key.keypos-1 text.key.tap, .layer-navi g.key.keypos-13 text.key.tap {
  transform: translate(0, 5px);
  transform: translate(0, 5);
}
