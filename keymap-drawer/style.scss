$tw-rose-700: #be123c;
$tw-lime-600: #65a30d;
$tw-fuchsia-800: #86198f;
$tw-lime-50: #f7fee7;
$tw-neutral-300: #d4d4d4;
$tw-neutral-200: #e5e5e5;
$tw-neutral-100: #f5f5f5;
$tw-stone-50: #fafaf9;
$tw-stone-300: #d6d3d1;
$tw-stone-500: #78716c;
$tw-stone-800: #292524;
$tw-sky-700: #0369a1;
$tw-amber-800: #92400e;
$tw-amber-700: #b45309;
$tw-amber-600: #d97706;
$tw-amber-500: #f59e0b;
$tw-amber-400: #fbbf24;
$tw-amber-300: #fcd34d;
$tw-amber-300: #fde68a;

// https://tailwindcss.com/docs/customizing-colors


// inherit to force styles through use tags
svg path {
    fill: inherit;
}

/* font and background color specifications */
svg.keymap {
    font-family: "Quicksand", SFMono-Regular, Consolas, Liberation Mono, Menlo, monospace;
    font-size: 16px;
    font-weight: 500;  // resvg will pick Quicksand-Medium.ttf
    font-kerning: normal;
    text-rendering: optimizeLegibility;
    fill: $tw-stone-800;
}

/* default key styling */
rect.key {
    fill: $tw-stone-50;
    stroke: $tw-stone-300;
    stroke-width: 1;
}

/* default key side styling, only used is draw_key_sides is set */
rect.side {
    filter: brightness(90%);
}

/* color accent for combo boxes */
rect.combo, rect.combo-separate {
    fill: #cdf;
}

/* color accent for held keys */
rect.held, rect.combo.held {
    fill: #fdd;
}

/* color accent for ghost (optional) keys */
rect.ghost, rect.combo.ghost {
    stroke-dasharray: 4, 4;
    stroke-width: 2;
}

text {
    text-anchor: middle;
    dominant-baseline: middle;
}

/* styling for layer labels */
text.label {
    font-weight: bold;
    text-anchor: start;
    stroke: white;
    stroke-width: 2;
    paint-order: stroke;
}

/* styling for combo tap, and key hold/shifted label text */
text.combo, text.hold, text.shifted {
    font-size: 11px;
}

text.hold {
    text-anchor: middle;
    dominant-baseline: auto;
}

text.shifted {
    text-anchor: middle;
    dominant-baseline: hanging;
}

/* styling for hold/shifted label text in combo box */
text.combo.hold, text.combo.shifted {
    font-size: 8px;
}


/* styling for combo dendrons */
path.combo {
    stroke-width: 1;
    stroke: $tw-stone-500;
    fill: none;
}

g.trans{
  opacity: 0.7;

  text, .glyph{
      opacity: .1
  }
}



/* Start Tabler Icons Cleanup */
/* cannot use height/width with glyphs */
.icon-tabler > path {
    fill: inherit;
    stroke: inherit;
    stroke-width: 2;
}
/* hide tabler's default box */
.icon-tabler > path[stroke="none"][fill="none"] {
    visibility: hidden;
}
/* End Tabler Icons Cleanup */


//==============================================================================

.rsym {
  rect{
    stroke: $tw-fuchsia-800;
  }
  .glyph, text{
    fill: $tw-fuchsia-800;
  }
}

.rlayer {
  rect{
    stroke: $tw-lime-600 /*lime-600*/;
    fill: $tw-lime-50;
  }
  .glyph, text{
    fill: $tw-lime-600 /*lime-600*/;
  }
  .glyph, &-held .glyph {
    transform: scale(1.5);
  }
  &-held rect{
    stroke: $tw-lime-600 /*lime-600*/;
    fill: $tw-lime-600;
  }
  &-held .glyph, &-held text{
    fill: white;
  }
}


.rmod {
  rect{
    stroke: $tw-rose-700;
  }
  .glyph, text {
    fill: $tw-rose-700;
  }
}

.rdead {
  rect{
    stroke: $tw-amber-600;
  }
  .glyph, text {
    fill: $tw-amber-600;
  }
}

rect.held, rect.combo.held {
  stroke: $tw-lime-600;
  fill: $tw-lime-600;
}
rect.combo, rect.combo-separate{
  fill: $tw-neutral-200;
  opacity: 0.7;
}

.key.shifted, .key.hold {
  opacity: .6
}



text.label{
  // shift layer label down just above the keys
  transform: translate(0, 20px); // chrome
  transform: translate(0, 20); // resvg
}

text.key.shifted{
  // more space between shifted label and top of key
  transform: translate(0, 2px); // chrome
  transform: translate(0, 2); // resvg
}



//==============================================================================
// per-key styling
//==============================================================================

// thumb keys
.keypos-38, .keypos-39{
  rect{
      stroke: $tw-lime-600;
      fill: $tw-lime-50;
  }
  text, .glyph{
      fill: $tw-lime-600;
  }
  rect.held{
    // overwrite
    stroke: $tw-lime-600;
    fill: $tw-lime-600;
  }
}


// home row modifiers
.layer-base g.key.keypos-{
  &14, &15, &16, &19, &20, &21, &22{
    .key.hold{
      fill: $tw-rose-700;
    }
  }
}


// unicode input
.layer-lower g.key.keypos-{
  &3, &4, &5, &28, &29{
    .key.hold{
      fill: $tw-sky-700;
    }
  }
}


// make media tabler icons slightly larger
$larger_tabler_icons: "&volume, &volume-2, &volume-3, \
&player-track-next, &player-track-prev, &player-play, \
&sun-high, &sun-low, &player-eject, &lock";

.key.tap.glyph.tabler__{
  #{$larger_tabler_icons}{
    transform: scale(1.2);
  }
}
.icon-tabler-{
  #{$larger_tabler_icons}{
    > path{
      stroke-width: 1.5;
    }
  }
}
