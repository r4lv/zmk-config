#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include "keys_de.h"
#include "keypos_qwertz.h"

// overwrite settings
&mt {
    flavor = "tap-preferred"; // default is "hold-preferred"
};


/ {
    keymap {
        compatible = "zmk,keymap";

        layer_base {
            bindings = <
/* ╭────────────┬───────────────┬──────────────┬──────────────┬────────────────┬─────────╮   ╭─────────┬────────────────┬──────────────┬──────────────┬──────────────────┬────────────╮ */
    &mt ESC TAB  &kp DE_Q        &kp DE_W       &kp DE_E       &kp DE_R         &kp DE_T      &kp DE_Z  &kp DE_U         &kp DE_I       &kp DE_O       &kp DE_P           &kp BSPC
/* ├────────────┼───────────────┼──────────────┼──────────────┼────────────────┼─────────┤   ├─────────┼────────────────┼──────────────┼──────────────┼──────────────────┼────────────┤ */
    &kp LCTRL    &mt LCTRL DE_A  &mt LALT DE_S  &mt LCMD DE_D  &mt RSHIFT DE_F  &kp DE_G      &kp DE_H  &mt RSHIFT DE_J  &mt RCMD DE_K  &mt RALT DE_L  &mt RCTRL DE_PLUS  &kp DE_HASH
/* ├────────────┼───────────────┼──────────────┼──────────────┼────────────────┼─────────┤   ├─────────┼────────────────┼──────────────┼──────────────┼──────────────────┼────────────┤ */
    &kp LCMD     &kp DE_Y        &kp DE_X       &kp DE_C       &kp DE_V         &kp DE_B      &kp DE_N  &kp DE_M         &kp DE_COMMA   &kp DE_DOT     &kp DE_MINUS       &kp RSHIFT
/* ╰────────────┴───────────────┴──────────────┼──────────────┼────────────────┼─────────┤   ├─────────┼────────────────┼──────────────┼──────────────┴──────────────────┴────────────╯ */
                                                &kp LCMD       &kp RETURN       &mo 1         &mo 2     &kp SPACE        &kp LALT
/*                                             ╰──────────────┴────────────────┴─────────╯   ╰─────────┴────────────────┴──────────────╯                                                */
            >;
        };

        layer_lower {
            bindings = <
/* ╭────────────┬─────────────┬─────────────┬──────────────┬─────────────┬────────────╮   ╭─────────────┬──────────┬──────────┬──────────┬─────────────┬────────────╮ */
    &mt ESC TAB  &kp DE_CARET  &kp DE_ACUTE  &trans         &trans        &trans           &trans        &kp DE_N7  &kp DE_N8  &kp DE_N9  &kp N0        &kp DE_SZ
/* ├────────────┼─────────────┼─────────────┼──────────────┼─────────────┼────────────┤   ├─────────────┼──────────┼──────────┼──────────┼─────────────┼────────────┤ */
    &kp LCTRL    &kp DE_EXCL   &kp DE_DQT    &kp DE_DOLLAR  &kp DE_PRCNT  &kp DE_AMPS      &kp DE_SLASH  &kp DE_N4  &kp DE_N5  &kp DE_N6  &kp DE_PLUS   &kp RALT
/* ├────────────┼─────────────┼─────────────┼──────────────┼─────────────┼────────────┤   ├─────────────┼──────────┼──────────┼──────────┼─────────────┼────────────┤ */
    &kp LCMD     &kp DE_EQUAL  &kp DE_LBRC   &kp DE_RBRC    &trans        &trans           &kp DE_ASTRK  &kp DE_N1  &kp DE_N2  &kp DE_N3  &kp DE_MINUS  &kp RSHIFT
/* ╰────────────┴─────────────┴─────────────┼──────────────┼─────────────┼────────────┤   ├─────────────┼──────────┼──────────┼──────────┴─────────────┴────────────╯ */
                                             &kp LCMD       &trans        &none            &mo 2         &trans     &kp LALT
/*                                          ╰──────────────┴─────────────┴────────────╯   ╰─────────────┴──────────┴──────────╯                                       */
            >;
        };

        layer_raise {
            bindings = <
/* ╭─────────────┬──────────┬──────────┬──────────┬───────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────┬────────────╮ */
    &kp DE_CARET  &kp DE_N1  &kp DE_N2  &kp DE_N3  &kp DE_N4   &kp DE_N5      &kp DE_N6  &kp DE_N7  &kp DE_N8  &kp DE_N9  &kp DE_N0  &kp DE_ACUTE
/* ├─────────────┼──────────┼──────────┼──────────┼───────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼────────────┤ */
    &kp LCTRL     &trans     &trans     &trans     &trans      &trans         &trans     &trans     &kp UP     &trans     &kp DE_SZ  &kp RALT
/* ├─────────────┼──────────┼──────────┼──────────┼───────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼────────────┤ */
    &kp LCMD      &kp DE_LT  &trans     &trans     &trans      &trans         &trans     &kp LEFT   &kp DOWN   &kp RIGHT  &trans     &kp RSHIFT
/* ╰─────────────┴──────────┴──────────┼──────────┼───────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┴──────────┴────────────╯ */
                                        &kp LCMD   &kp RETURN  &mo 1          &trans     &kp SPACE  &kp LALT
/*                                     ╰──────────┴───────────┴──────────╯   ╰──────────┴──────────┴──────────╯                                    */
            >;
        };

        layer_tri {
            bindings = <
/* ╭───────────┬─────────────┬─────────────┬───────┬───────┬───────╮   ╭───────┬───────┬───────┬───────┬───────┬───────╮ */
    &trans      &bt BT_SEL 0  &bt BT_SEL 1  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
/* ├───────────┼─────────────┼─────────────┼───────┼───────┼───────┤   ├───────┼───────┼───────┼───────┼───────┼───────┤ */
    &bt BT_CLR  &trans        &trans        &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
/* ├───────────┼─────────────┼─────────────┼───────┼───────┼───────┤   ├───────┼───────┼───────┼───────┼───────┼───────┤ */
    &trans      &trans        &trans        &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
/* ╰───────────┴─────────────┴─────────────┼───────┼───────┼───────┤   ├───────┼───────┼───────┼───────┴───────┴───────╯ */
                                            &trans  &trans  &trans      &trans  &trans  &trans
/*                                         ╰───────┴───────┴───────╯   ╰───────┴───────┴───────╯                      */

            >;
        };
    };

    combos {
        compatible = "zmk,combos";

        qw { key-positions = <posQ posW>; bindings = <&kp DE_LBRC>; layers = <0>; };
        we { key-positions = <posW posE>; bindings = <&kp DE_LPAR>; layers = <0>; };
        er { key-positions = <posE posR>; bindings = <&kp DE_LBKT>; layers = <0>; };
        ui { key-positions = <posU posI>; bindings = <&kp DE_RBKT>; layers = <0>; };
        io { key-positions = <posI posO>; bindings = <&kp DE_RPAR>; layers = <0>; };
        op { key-positions = <posO posP>; bindings = <&kp DE_RBRC>; layers = <0>; };
            
        xc { key-positions = <posX posC>;     bindings = <&kp DE_LBRC>; layers = <0>; };
        cv { key-positions = <posC posV>;     bindings = <&kp DE_BSLH>; layers = <0>; };
        mc { key-positions = <posM posKOM>;   bindings = <&kp DE_FSLH>; layers = <0>; };
        cp { key-positions = <posKOM posPNK>; bindings = <&kp DE_RBRC>; layers = <0>; };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
